plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url 'https://maven.kosmx.dev/' }
	maven { url 'https://maven.shedaniel.me/' }
	maven { url 'https://jitpack.io' }
	maven {
		name = 'Modrinth'
		url = 'https://api.modrinth.com/maven'
		content {
			includeGroup 'maven.modrinth'
		}
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		// location of the maven that hosts JEI files before January 2023
		name = "Progwml6's maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		// location of the maven that hosts JEI files since January 2023
		name = "Jared's maven"
		url = "https://maven.blamejared.com/"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// Default stuff
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Dependencies
	include(implementation("com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}"))

	modImplementation("maven.modrinth:spell-engine:${project.spell_engine_version}")
	modImplementation("maven.modrinth:spell-power:${project.spell_power_version}")
	modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim_version}")
	modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}")

	// Tests
	modImplementation("com.terraformersmc:modmenu:${project.mod_menu_version}")
	modImplementation("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")



}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}